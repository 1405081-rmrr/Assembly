.MODEL SMALL
.STACK 100H
.DATA
     CR EQU 0DH
     LF EQU 0AH
     IFNAME DB "Sample.txt",0
     OFNAME DB "Output.txt",0
     IFHANDLE DW ?  ; HANDLE FOR INPUT FILE
     OFHANDLE DW ?  ; HANDLE FOR OUTPUT FILE   
     KEY DB 0       ; PROGRAMMED FOR 26 MAX
     BUFFER DB 0    ; SINGLE CHAR   
.CODE
MAIN PROC
;INITIALIZE DS
    MOV AX, @DATA
    MOV DS, AX
;OPEN INPUT FILE "Sample.txt"    
    MOV AH, 3DH         ; PROCESS EXISTING FILE
    LEA DX, IFNAME      ; LOAD INPUT FILE NAME
    MOV AL, 0           ; FOR READ ONLY
    INT 21H
    MOV IFHANDLE, AX    ; STORE INPUT FILE HANDLE      
;OPEN OUTPUT FILE "Output.txt"    
    MOV AH, 3CH         ; PROCESS NEW FILE
    LEA DX, OFNAME      ; LOAD OUTPUT FILE NAME
    MOV CL, 1           ; FOR WRITE
    INT 21H
    MOV OFHANDLE, AX    ; STORE OUTPUT FILE HANDLE   
;READ FIRST LINE FROM "Sample.txt"
LOOPFORKEY:
    LEA DX, BUFFER
    MOV AH, 3FH         ; READ FUNCTION
    MOV BX, IFHANDLE    ; LOAD INPUT FILE HANDLE
    MOV CX, 1           ; READ 1 BYTE
    INT 21H             ; BUFFER HOLDS CURRENTLY READ CHAR
    CMP BUFFER, LF
    JE ENDLOOPFORKEY    ; IF BUFFER == NEWLINE, INPUT LOOP ENDS
    CMP BUFFER, 30H
    JL LOOPFORKEY       
    CMP BUFFER, 39H
    JG LOOPFORKEY       ; IF BUFFER < 0 AND > 9, CONTINUE
; PROCESS NUMERICAL CONVERSION, STORE AT KEY    
    XOR AH, AH
    MOV AL, BUFFER
    SUB AL, '0' 
    MOV BUFFER, AL
    MOV AL, KEY
    MOV BL, 10
    MUL BL
    ADD AL, BUFFER
    MOV KEY, AL
    JMP LOOPFORKEY 
ENDLOOPFORKEY:    
;READ SECOND LINE CHAR BY CHAR FROM "Sample.txt"
;PRINT OUTPUT TO "Output.txt"
LOOPFORMSG:
    LEA DX, BUFFER
    MOV AH, 3FH         ; READ FUNCTION
    MOV BX, IFHANDLE
    MOV CX, 1           ; READ 1 BYTE
    INT 21H
    CMP AX, CX          ; AX == BYTES ACTUALLY READ
    JL ENDLOOPFORMSG    ; IF AX == 0 < 1, EOF, LOOP ENDS
; IF BUFFER == [A,B] AND BUFFER == [a,b], DECRYPT
; ELSE PRINT AS IT IS    
    CMP BUFFER, 41H
    JL PRINTBUFFER
    CMP BUFFER, 5AH
    JLE DECRYPBIG       ; DECRYPT BIG LETTERS       
    CMP BUFFER, 61H
    JL PRINTBUFFER
    CMP BUFFER, 7AH
    JLE DECRYPSMALL     ; DECRYPT SMALL LETTERS     
    JMP PRINTBUFFER    
DECRYPBIG:      
    MOV AL, KEY
    SUB BUFFER, AL
    CMP BUFFER, 41H
    JL OOR              ; (BUFFER - KEY) OUT OF RANGE [A,B] 
    CMP BUFFER, 5AH
    JLE PRINTBUFFER    
DECRYPSMALL:
    MOV AL, KEY
    SUB BUFFER, AL    
    CMP BUFFER, 61H
    JL OOR              ; (BUFFER - KEY) OUT OF RANGE [a,b]
    JMP PRINTBUFFER
OOR:                    
    ADD BUFFER, 26      ; CYCLE
PRINTBUFFER:    
    MOV AH, 40H         ; WRITE FUNCTION
    MOV BX, OFHANDLE    ; LOAD OUTPUT FILE HANDLE
    MOV CX, 1           ; WRITE 1 BYTE
    INT 21H
    JMP LOOPFORMSG
ENDLOOPFORMSG:                           
;DOS EXIT
    MOV AH, 4CH
    INT 21H
MAIN ENDP
    END MAIN
